import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_chaitra/models/user.dart';
import 'package:flutter_chaitra/providers/autovalidate_provider.dart';
import 'package:flutter_chaitra/providers/user_provider.dart';
import 'package:flutter_form_builder/flutter_form_builder.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:form_builder_validators/form_builder_validators.dart';
import 'package:go_router/go_router.dart';


class FormPage extends ConsumerStatefulWidget {
  final User? user;
  const FormPage({super.key, this.user});

  @override
  ConsumerState<FormPage> createState() => _FormPageState();
}

class _FormPageState extends ConsumerState<FormPage> {
  final _formKey = GlobalKey<FormBuilderState>();
  @override
  Widget build(BuildContext context) {
    final mode = ref.watch(autoValidateModeProvider);
    print(widget.user);
    return Scaffold(
      appBar: AppBar(
        title: Text('Form Widgets'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(10.0),
        child: FormBuilder(
             key: _formKey,
            autovalidateMode: mode,
            child: ListView(
              children: [
                FormBuilderTextField(
                    name: 'username',
                  initialValue: widget.user?.username,
                  decoration: InputDecoration(
                    hintText: 'Username',
                    contentPadding: EdgeInsets.symmetric(horizontal: 10, vertical: 10),
                    prefixIcon: Icon(Icons.person),
                    suffixIcon: Icon(Icons.note_alt_rounded),
                   border: OutlineInputBorder()
                  ),
                  validator: FormBuilderValidators.compose([
                    FormBuilderValidators.required(),
                    FormBuilderValidators.minLength(5),
                    FormBuilderValidators.maxLength(30),
                  ]),
                ),
                SizedBox(height: 16,),

                FormBuilderTextField(
                  inputFormatters: [
                    LengthLimitingTextInputFormatter(10)
                  ],
                  name: 'phone',
                  initialValue: widget.user?.phone,
                  keyboardType: TextInputType.phone,
                  decoration: InputDecoration(
                      hintText: 'phone',
                      contentPadding: EdgeInsets.symmetric(horizontal: 10, vertical: 10),
                      prefixIcon: Icon(Icons.phone),
                      border: OutlineInputBorder()
                  ),
                  validator: FormBuilderValidators.compose([
                    FormBuilderValidators.required(),
                  ]),
                ),
                SizedBox(height: 16,),
                FormBuilderTextField(
                  name: 'email',
                  initialValue: widget.user?.email,
                  keyboardType: TextInputType.emailAddress,
                  decoration: InputDecoration(
                      hintText: 'email',
                      contentPadding: EdgeInsets.symmetric(horizontal: 10, vertical: 10),
                      prefixIcon: Icon(Icons.mail),
                      border: OutlineInputBorder()
                  ),
                  validator: FormBuilderValidators.compose([
                    FormBuilderValidators.required(),
                    FormBuilderValidators.email()
                  ]),
                ),
                SizedBox(height: 16,),

                FormBuilderRadioGroup(
                  initialValue: widget.user?.gender,
                  name: 'gender',
                  options: [
                    FormBuilderFieldOption(value: 'male', child: Text('Male')),
                    FormBuilderFieldOption(value: 'female', child: Text('Female'))
                  ],
                  validator: FormBuilderValidators.compose([
                    FormBuilderValidators.required()
                  ]),
                ),
                
                SizedBox(height: 16,),
                
                FormBuilderDropdown(
                    name: 'country',
                    initialValue: widget.user?.country,
                    hint: Text('Select Country'),
                    items: [
                      DropdownMenuItem(
                        value: 'Nepal',
                          child: Text('Nepal')
                      ),
                      DropdownMenuItem(
                          value: 'India',
                          child: Text('India')
                      ),
                      DropdownMenuItem(
                          value: 'China',
                          child: Text('China')
                      )
                    ],
                  validator: FormBuilderValidators.compose([
                    FormBuilderValidators.required()
                  ]),
                ),


                SizedBox(height: 40,),

                ElevatedButton(onPressed: (){

                  if(_formKey.currentState!.saveAndValidate(focusOnInvalid: false)){
                    final map = _formKey.currentState!.value;
                    if(widget.user == null){
                      ref.read(userDetailProvider.notifier).addUserDetail(map);
                    }else{

                    }

                   context.pop();
                  }else{
                    ref.read(autoValidateModeProvider.notifier).change();
                  }
                }, child: Text('Submit'))

              ],
            )
        ),
      ),
    );
  }
}
